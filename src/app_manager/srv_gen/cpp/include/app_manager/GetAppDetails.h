/* Auto-generated by genmsg_cpp for file /tmp/buildd/ros-groovy-multimaster-experimental-0.2.1/debian/ros-groovy-multimaster-experimental/opt/ros/groovy/stacks/multimaster_experimental/app_manager/srv/GetAppDetails.srv */
#ifndef APP_MANAGER_SERVICE_GETAPPDETAILS_H
#define APP_MANAGER_SERVICE_GETAPPDETAILS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"



#include "app_manager/ExchangeApp.h"

namespace app_manager
{
template <class ContainerAllocator>
struct GetAppDetailsRequest_ {
  typedef GetAppDetailsRequest_<ContainerAllocator> Type;

  GetAppDetailsRequest_()
  : name()
  {
  }

  GetAppDetailsRequest_(const ContainerAllocator& _alloc)
  : name(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  name;


  typedef boost::shared_ptr< ::app_manager::GetAppDetailsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::app_manager::GetAppDetailsRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetAppDetailsRequest
typedef  ::app_manager::GetAppDetailsRequest_<std::allocator<void> > GetAppDetailsRequest;

typedef boost::shared_ptr< ::app_manager::GetAppDetailsRequest> GetAppDetailsRequestPtr;
typedef boost::shared_ptr< ::app_manager::GetAppDetailsRequest const> GetAppDetailsRequestConstPtr;



template <class ContainerAllocator>
struct GetAppDetailsResponse_ {
  typedef GetAppDetailsResponse_<ContainerAllocator> Type;

  GetAppDetailsResponse_()
  : app()
  {
  }

  GetAppDetailsResponse_(const ContainerAllocator& _alloc)
  : app(_alloc)
  {
  }

  typedef  ::app_manager::ExchangeApp_<ContainerAllocator>  _app_type;
   ::app_manager::ExchangeApp_<ContainerAllocator>  app;


  typedef boost::shared_ptr< ::app_manager::GetAppDetailsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::app_manager::GetAppDetailsResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetAppDetailsResponse
typedef  ::app_manager::GetAppDetailsResponse_<std::allocator<void> > GetAppDetailsResponse;

typedef boost::shared_ptr< ::app_manager::GetAppDetailsResponse> GetAppDetailsResponsePtr;
typedef boost::shared_ptr< ::app_manager::GetAppDetailsResponse const> GetAppDetailsResponseConstPtr;


struct GetAppDetails
{

typedef GetAppDetailsRequest Request;
typedef GetAppDetailsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetAppDetails
} // namespace app_manager

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::app_manager::GetAppDetailsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::app_manager::GetAppDetailsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::app_manager::GetAppDetailsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c1f3d28f1b044c871e6eff2e9fc3c667";
  }

  static const char* value(const  ::app_manager::GetAppDetailsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc1f3d28f1b044c87ULL;
  static const uint64_t static_value2 = 0x1e6eff2e9fc3c667ULL;
};

template<class ContainerAllocator>
struct DataType< ::app_manager::GetAppDetailsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "app_manager/GetAppDetailsRequest";
  }

  static const char* value(const  ::app_manager::GetAppDetailsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::app_manager::GetAppDetailsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
string name\n\
\n\
";
  }

  static const char* value(const  ::app_manager::GetAppDetailsRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::app_manager::GetAppDetailsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::app_manager::GetAppDetailsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::app_manager::GetAppDetailsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "404cd76612a719d24ac22fba2d495de8";
  }

  static const char* value(const  ::app_manager::GetAppDetailsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x404cd76612a719d2ULL;
  static const uint64_t static_value2 = 0x4ac22fba2d495de8ULL;
};

template<class ContainerAllocator>
struct DataType< ::app_manager::GetAppDetailsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "app_manager/GetAppDetailsResponse";
  }

  static const char* value(const  ::app_manager::GetAppDetailsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::app_manager::GetAppDetailsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ExchangeApp app\n\
\n\
\n\
\n\
================================================================================\n\
MSG: app_manager/ExchangeApp\n\
# app name\n\
string name\n\
# user-friendly display name of application\n\
string display_name\n\
# the version of the package currently installed\n\
string version\n\
# latest version of the package avaliable\n\
string latest_version\n\
# the detailed description of the app\n\
string description\n\
# icon for showing app\n\
Icon icon\n\
# hidden apps are not show - used for cases where multiple apps are in a deb\n\
bool hidden\n\
================================================================================\n\
MSG: app_manager/Icon\n\
# Image data format.  \"jpeg\" or \"png\"\n\
string format\n\
\n\
# Image data.\n\
uint8[] data\n\
\n\
";
  }

  static const char* value(const  ::app_manager::GetAppDetailsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::app_manager::GetAppDetailsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.name);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetAppDetailsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::app_manager::GetAppDetailsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.app);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetAppDetailsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<app_manager::GetAppDetails> {
  static const char* value() 
  {
    return "982707be65dd9bb38c19f6e18cb18db5";
  }

  static const char* value(const app_manager::GetAppDetails&) { return value(); } 
};

template<>
struct DataType<app_manager::GetAppDetails> {
  static const char* value() 
  {
    return "app_manager/GetAppDetails";
  }

  static const char* value(const app_manager::GetAppDetails&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<app_manager::GetAppDetailsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "982707be65dd9bb38c19f6e18cb18db5";
  }

  static const char* value(const app_manager::GetAppDetailsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<app_manager::GetAppDetailsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "app_manager/GetAppDetails";
  }

  static const char* value(const app_manager::GetAppDetailsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<app_manager::GetAppDetailsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "982707be65dd9bb38c19f6e18cb18db5";
  }

  static const char* value(const app_manager::GetAppDetailsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<app_manager::GetAppDetailsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "app_manager/GetAppDetails";
  }

  static const char* value(const app_manager::GetAppDetailsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // APP_MANAGER_SERVICE_GETAPPDETAILS_H

